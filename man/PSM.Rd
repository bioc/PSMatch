% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PSM-class.R, R/reducePSMs.R
\name{PSM}
\alias{PSM}
\alias{PSM-class}
\alias{reducePSMs}
\alias{readPSMs}
\alias{PSM,character}
\alias{PSM,data.frame}
\alias{PSM,PSM}
\alias{reduced}
\alias{reduced<-}
\title{A class for peptide-spectrum matches}
\usage{
PSM(
  x,
  spectrum = NA,
  peptide = NA,
  protein = NA,
  decoy = "isDecoy",
  rank = "rank",
  parser = c("mzR", "mzID"),
  BPPARAM = SerialParam()
)

reduced(x, spectrumID)

reduced(x) <- value

reducePSMs(x, k)
}
\arguments{
\item{x}{An instance of class \code{PSM}.}

\item{spectrum}{\code{character(1)} that defines a spectrum in the PSM
data. Typically \code{"spectrumID"}.}

\item{peptide}{\code{character(1)} that defines a peptide in the PSM
data. Typically \code{"spequence"}.}

\item{protein}{\code{character(1)} that defines a protein in the PSM
data. Typically \code{"DatabaseAccess"}.}

\item{decoy}{\code{character(1)} that defines a decoy hit in the PSM
data. Default is \code{"isDecoy"}. This variable is named
\code{"isdecoy"} if you use the \code{mzID} parser.}

\item{rank}{\code{character(1)} that defines the rank of the petide
spetrum match in the PSM data. Default is \code{"rank"}.}

\item{parser}{\code{character(1)} defining the parser to be used to
read the \code{mzIdentML} files. One of \code{"mzR"} (default) or
\code{"mzID"}.}

\item{BPPARAM}{an object inheriting from \link{BiocParallelParam} to
control parallel processing. The default value is
\code{SerialParam()} to read files in series.}

\item{spectrumID}{\code{character(1)} with the column name referring to
the spectrum identifier or any other unique key for the \code{PSM}
object \code{x}. This parameter can be set to calculate the reduced
state explicitly by by-passing the \code{reduced} metadata flag.}

\item{value}{\code{logical(1)} to set the reduced state of the \code{PSM}
object.}

\item{k}{A \code{vector} or \code{factor} of length equal to \code{nrow(x)} that
defines the primary key used to reduce \code{x}. This typically
corresponds to the spectrum identifier, often names
\code{spectrumID}.}
}
\value{
\code{PSM()} returns a \code{PSM} object containing the
peptide-spectrum matches stored in \code{files}.

\code{reducePSMs()} returns a reduced version of the \code{x} input.
}
\description{
The \code{PSM} class is a simple class to store and manipulate
peptide-spectrum matches. The class encapsulates PSM data as a
\code{DataFrame} (or more specifically a \code{DFrame}) with additional
lightweight metadata annotation.

There are two types of \code{PSM} objects:
\itemize{
\item Objects with duplicated spectrum identifiers. This holds for
multiple matches to the same spectrum, be it different peptide
sequences or the same sequence with or without a
post-translational modification. Such objects are typically
created with the \code{PSM()} constructor starting from \code{mzIdentML}
files.
\item Reduced object where the spectrum identifiers (or any equivalent
column - see example below) are unique keys within the PSM
table. Matches to the same scan/spectrum in each raw data file
are merged into a single data row. Reduced \code{PSM} object are
created with the \code{reducePSMs()} function. See examples below.
}

Objects can be checked for their reduced state with the
\code{reduced()} function which returns TRUE for reduced instances,
FALSE when the spectrum identifiers are duplicated, or NA when
unknown. The flag can also be set explicitly with the
\verb{reduced()<-} setter.

The constructor uses parsers provided by the \code{mzR} or \code{mzID}
packages to read the \code{mzIdentML} data. See the vignette for some
apparent differences in their outputs.
}
\examples{

## ---------------------------------
## Example with a single mzid file
## ---------------------------------

f <- msdata::ident(full.names = TRUE, pattern = "TMT")
basename(f)

## mzR parser (default)
psm <- PSM(f)
psm

## mzID parser
PSM(f, parser = "mzID")

i <- which(duplicated(psm$spectrumID))[1:2]
i <- which(psm$spectrumID \%in\% psm$spectrumID[i])
psm2 <- psm[i, ]
reduced(psm2)

## Peptide sequence CIDRARHVEVQIFGDGKGRVVALGERDCSLQRR with
## Carbamidomethyl modifications at positions 1 and 28.
DataFrame(psm2[, c("sequence", "spectrumID", "modName", "modLocation")])
reduced(psm2) <- FALSE

rpsm2 <- reducePSMs(psm2, psm2$spectrumID)
rpsm2
DataFrame(rpsm2[, c("sequence", "spectrumID", "modName", "modLocation")])
reduced(rpsm2)

## ---------------------------------
## Multiple mzid files
## ---------------------------------

library(rpx)
PXD022816 <- PXDataset("PXD022816")
PXD022816

(mzids <- pxget(PXD022816, grep("mzID", pxfiles(PXD022816))[1:2]))
psm <- PSM(mzids)
psm

## Here, spectrum identifiers are repeated accross files
psm[grep("scan=20000", psm$spectrumID), "spectrumFile"]

## Let's create a new primary identifier composed of the scan
## number and the file name
psm$pkey <- paste(sub("^.+Task\\\\\\\\", "", psm$spectrumFile),
                  sub("^.+scan=", "", psm$spectrumID),
                  sep = "::")
head(psm$pkey)

## the PSM is not reduced
reduced(psm, "pkey")
DataFrame(psm[6:7, ])

## same sequence, same spectrumID, same file
psm$sequence[6:7]
psm$pkey[6:7]

## different modification locations
psm$modLocation[6:7]

rpsm <- reducePSMs(psm, psm$pkey)
rpsm
reduced(rpsm, "pkey")

## the two rows are now merged into a single one; the distinct
## modification locations are preserved.
(i <- which(rpsm$pkey == "QEP2LC6_HeLa_50ng_251120_01-calib.mzML::12894"))
DataFrame(rpsm[i, c("sequence", "pkey", "modName", "modLocation")])
}
